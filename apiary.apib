FORMAT: X-1A
HOST: http://0xdata.com/

# H2O REST API
Documentation of H2O REST API.

## First class entities (resources)

H2O provides three 
  - Frame
  - Job
  - Model
  
Here is a link for iris dataset used in example below.

## List files from given datasource [/v2/list_uri.json{?uri,exclude_filter,exclude_list}]
The call for given URI returns a list of files which are accessible.
The call also returns the files which were skipped (skipped by default, skipped because lack of READ permission,
skipped because of exclude filter or exclude list).

Note: client can filter the list by itself.

+ Parameters
  + uri (string,required) ... uri of data source
  + exclude_filter = `` (string, optional) ... exclude files by regexp (Java regexp style)
  + exclude_list = `` (string, optional) ... explicit list of excluded files (h2o can put into the list some of files by default)

### Retrieve a list of resources at given URI [GET]
+ Response 200 (application/json)
        
        { 
            "files" : [ 
                "hdfs://192.168.1.161/home-0xdiag-datasets/file_1.dat.gz",
                "hdfs://192.168.1.161/home-0xdiag-datasets/file_2.dat.gz"
            ],
            "exluded_files" : [
                "hdfs://192.168.1.161/home-0xdiag-datasets/_SUCCESS",
                "hdfs://192.168.1.161/home-0xdiag-datasets/_FAILED"
            ]
        }

## Post a file [/v2/post_file.json{?file}]
The call creates a new primitive value in H2O by uploading a file.
Returns uri (i.e., H2O destination key) of given resource.

```
curl --include -F file=iris.csv -F filedata=@iris.csv http://h2o/v2/post_file.json
```

+ Parameters
  + file (string, required) ... a file to upload

### Post a given file [POST]
+ Response 200 (application/json)

        
        {
            "dst" : "iris.csv"
        }

## Parse preview [/v2/parse_preview.json?{files,parser_type,data_separator,header,header_separator,column_types,skip_header,preview_len}]
The call returns a guessed parser config. The client can explicitly enforce selected parameters/behavior.

+ Parameters
  + files (string,required) ... list of file URIs to be parsed.
  + parser_type = `AUTO` (string,optional) ... required data parser (CSV,SVMLight,XLS, AUTO). 
  + separator = `,` (string,optional) ... data separator.
  + header (string, optional) ... list of column names
  + header_separator (string, optional) ... header separator
  + column_types (string, optional) ... list of column types.
  + skip_header = `False` (boolean,optional) ... explicitly skip header guessing
  + preview_len = `10` (integer,optional) ... length

### Retrieve a parse preview [POST]
+ Response 200 (application/json)

        {
            "files"         : [ "iris.csv" ],
            "columns"       : 
                [ 
                    {
                        "header" : "sepal_len",
                        "type"   : "DOUBLE"
                    },
                    {
                        "header" : "sepal_wid",
                        "type"   : "DOUBLE"
                    },
                    {
                        "header" : "petal_len",
                        "type"   : "DOUBLE"
                    },
                    {
                        "header" : "petal_wid",
                        "type"   : "DOUBLE"
                    },
                    {
                        "header" : "class",
                        "type"   : "ENUM"
                    }],
            "parser_type"   : "CSV",
            "header_separator" : ",",
            "data_separator"   : ",",
            "preview_len"      : 10,
            "preview"          : [ 
                                    [5.1,3.5,1.4,0.2,"Iris-setosa"],
                                    [4.9,3.0,1.4,0.2,"Iris-setosa"],
                                    [4.7,3.2,1.3,0.2,"Iris-setosa"],
                                    [4.6,3.1,1.5,0.2,"Iris-setosa"],
                                    [5.0,3.6,1.4,0.2,"Iris-setosa"],
                                    [5.4,3.9,1.7,0.4,"Iris-setosa"],
                                    [4.6,3.4,1.4,0.3,"Iris-setosa"],
                                    [5.0,3.4,1.5,0.2,"Iris-setosa"],
                                    [4.4,2.9,1.4,0.2,"Iris-setosa"]
                                ]
        }
        
        
## Get header from file [/v2/get_header?{uri,header_separator}]
The call return a header stored in given file reflecting the separator.

+ Parameters
  + uri (string,required) ... h2o reference (i.e., key) containing a header
  + header_separator (string,optional) ... separator separating header

### Retrieve a header stored at given URI [GET]
+ Response 200 (application/json)
    
        { 
            "header"           : [ "sepal_len","sepal_wid","petal_len","petal_wid","class" ],
            "header_separator" : ","
        }
        

## Parse [/v2/parse.json?{list,parser_type,data_separator,header,header_separator,column_types}]

+ Parameters
  + list (string,required) ... list of files to be parsed
  + parser_type (string,optional) ... required data parser (CSV,SVMLight,XLS). 
  + separator (string,optional) ... data separator.
  + header (string, optional) ... list of column names
  + header_separator (string, optional) ... header separator
  + column_types (string, optional) ... list of column types.

### Start a parse job [POST]
+ Response 200 (application/json)

        {
            "dst" : "iris.hex"
        }

## List available resources [/v2/storeview.json]

### Retrieve [GET]
+ Response 200 (application/json)

        { "resources" : [ {
                "type": "model",
                "name": "gbm_model",
                "uri": "..."
            }, {
                "type": "frame",
                "name": "iris_train.hex",
                "uri":  "..."
            }
          ]
        }

## Inspect a resource [/v2/inspect.json{?src,offset,limit,cols}]
The following section describes Inspect REST call.

+ Parameters
  + src (string,required) ... name of H2O resource
  + offset (number,optional) ... offset of the first required row
  + limit (number,optional) ... number of rows to retrieve
  + cols (string,optional) ... columns selector

### Retrieve [GET]
+ Response 200 (application/json)

        { "src" : "iris_train.hex",
          "type" : "frame",
          "offset" : 0,
          "limit"  : 100,
          "nrows"  : 150,
          "ncols"  : 5,
          "rows"   : 3,
        }
        
## Inspect a java [/v2/inspect.java{?src}]
Retrieve a H2O resource as a Java program.

+ Parameters
   + src (string,required) ... name of H2O resource
   
### Retrieve [GET]
+ Response 200 (plain/text)

        class Iris {
        }


        
  
